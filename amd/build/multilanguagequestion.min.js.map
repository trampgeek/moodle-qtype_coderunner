{"version":3,"file":"multilanguagequestion.min.js","sources":["../src/multilanguagequestion.js"],"sourcesContent":["/******************************************************************************\n *\n * This module simply handles changes in the Language selection dropdown for\n * multilanguage questions as seen by students. It switches the Ace language\n * accordingly.\n * It should only be loaded in conjunction with the ui_ace module.\n *\n * @module qtype_coderunner/multilanguagequestion\n * @copyright  Richard Lobb, 2018, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n *\n */\n\ndefine(['jquery', 'core/str'], function($, str) {\n\n    let NO_LANGUAGE_MESSAGE = ''; // The 'no language chosen' message, to be set by AJAX.\n\n    /**\n     * Initialise the language selector dropdown when the document is ready.\n     * @param {string} taId The ID of the student answer box text area.\n     */\n    function initLangSelector(taId) {\n        $().ready(function() {\n            initLangSelectorWhenReady(taId);\n        });\n        const promise = str.get_string('nolanguage', 'qtype_coderunner');\n        $.when(promise).done(function(message) {\n            NO_LANGUAGE_MESSAGE = message; // Get the 'no language chosen' message.\n        });\n    }\n\n    /**\n     * Initialise the language selector. Called by initLangSelector when the\n     * document is ready, so the name is a bit of a misnomer.\n     * @param {string} taId The ID of the student answer box text area.\n     */\n    function initLangSelectorWhenReady(taId) {\n        const ta = $(document.getElementById(taId));  // The jquery text area element(s).\n        const langSelectorId = taId.replace('answer', 'language');\n        const selector = document.getElementById(langSelectorId);\n        const uiWrapperId = taId + '_wrapper';\n\n        /**\n         * Check if an element has an ancestor with a given ID\n         * @param {DOM element} element The element being tested\n         * @param {string} id the ancestor id to search for\n         * @returns {Boolean} True iff the specified ancestor exists\n         */\n        function hasAncestorWithId(element, id) {\n            while (element) {\n                if (element.id === id) {\n                    return true;\n                }\n                element = element.parentElement;\n            }\n            return false;\n        }\n\n        /**\n         * Set the language for the Ace editor.\n         */\n        function setAceLang() {\n            // Set the language for the Ace plugin (or any other plugin if it\n            // has a setLanguage method).\n            const lang = selector.value;\n            const uiWrapper = ta[0].current_ui_wrapper; // Currently-active UI wrapper on reqd ta.\n\n            if (uiWrapper && uiWrapper.uiInstance && typeof uiWrapper.uiInstance.setLanguage === 'function') {\n                uiWrapper.uiInstance.setLanguage(lang);\n            }\n        }\n\n        selector.onchange = setAceLang;\n\n        // Prevent processing of keydown events in the UI until the dropdown\n        // has been set.\n        document.body.onkeydown = function(event) {\n            if (event.target && hasAncestorWithId(event.target, uiWrapperId)) {\n                // Here only if keypress is within the UI wrapper for this question.\n                if (selector.value === '' && NO_LANGUAGE_MESSAGE) {\n                    alert(NO_LANGUAGE_MESSAGE);\n                    event.preventDefault();\n                }\n            }\n        };\n\n    }\n\n    return {'initLangSelector' : initLangSelector};\n});"],"names":["define","$","str","NO_LANGUAGE_MESSAGE","taId","ready","ta","document","getElementById","langSelectorId","replace","selector","uiWrapperId","hasAncestorWithId","element","id","parentElement","setAceLang","lang","value","uiWrapper","current_ui_wrapper","uiInstance","setLanguage","onchange","body","onkeydown","event","target","alert","preventDefault","initLangSelectorWhenReady","promise","get_string","when","done","message"],"mappings":";;;;;;;;;;;;AAaAA,gDAAO,CAAC,SAAU,aAAa,SAASC,EAAGC,SAEnCC,oBAAsB,SAyEnB,2BAnEmBC,MACtBH,IAAII,OAAM,qBAcqBD,YACzBE,GAAKL,EAAEM,SAASC,eAAeJ,OAC/BK,eAAiBL,KAAKM,QAAQ,SAAU,YACxCC,SAAWJ,SAASC,eAAeC,gBACnCG,YAAcR,KAAO,oBAQlBS,kBAAkBC,QAASC,SACzBD,SAAS,IACRA,QAAQC,KAAOA,UACR,EAEXD,QAAUA,QAAQE,qBAEf,WAMFC,mBAGCC,KAAOP,SAASQ,MAChBC,UAAYd,GAAG,GAAGe,mBAEpBD,WAAaA,UAAUE,YAA0D,mBAArCF,UAAUE,WAAWC,aACjEH,UAAUE,WAAWC,YAAYL,MAIzCP,SAASa,SAAWP,WAIpBV,SAASkB,KAAKC,UAAY,SAASC,OAC3BA,MAAMC,QAAUf,kBAAkBc,MAAMC,OAAQhB,cAEzB,KAAnBD,SAASQ,OAAgBhB,sBACzB0B,MAAM1B,qBACNwB,MAAMG,mBA1DdC,CAA0B3B,eAExB4B,QAAU9B,IAAI+B,WAAW,aAAc,oBAC7ChC,EAAEiC,KAAKF,SAASG,MAAK,SAASC,SAC1BjC,oBAAsBiC"}