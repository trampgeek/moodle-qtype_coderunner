{"version":3,"file":"resetbutton.min.js","sources":["../src/resetbutton.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This AMD module provides the functionality for the \"Reset\"\n * button that is shown just below the student answer field if the question is\n * defined to have preloaded text.\n * If clicked, the button reloads the student answer field with the original\n * preloaded text (after a Confirm dialogue, of course).\n *\n * @module qtype_coderunner/resetbutton\n * @copyright  Richard Lobb, 2016, The University of Canterbury\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\ndefine(['jquery'], function($) {\n\n    /**\n     * Initialise the Reset button.\n     * @param {string} buttonId The ID of the button.\n     * @param {string} answerId The ID of the answer box whose contents are to\n     * be reset.\n     * @param {string} confirmText The language string to display when asking\n     * the user to confirm the reset.\n     */\n    function initResetButton(buttonId, answerId, confirmText) {\n        var resetButton = $('[id=\"' + buttonId + '\"]'),\n            studentAnswer = $('[id=\"' + answerId + '\"]'),\n            uiWrapper;\n\n        resetButton.on(\"click\", function() {\n            if (window.behattesting || window.confirm(confirmText)) {\n                var reloadText = resetButton.attr('data-reload-text');\n                uiWrapper = studentAnswer.get(0).current_ui_wrapper;\n                if (uiWrapper && uiWrapper.uiInstance) {\n                    // If the textarea has a UI wrapper, and it's active.\n                    uiWrapper.stop();\n                    studentAnswer.val(reloadText);\n                    uiWrapper.restart();\n                } else {\n                    studentAnswer.val(reloadText);\n                }\n            }\n        });\n    }\n\n    return { \"initResetButton\": initResetButton };\n});\n"],"names":["define","$","buttonId","answerId","confirmText","uiWrapper","resetButton","studentAnswer","on","window","behattesting","confirm","reloadText","attr","get","current_ui_wrapper","uiInstance","stop","val","restart"],"mappings":";;;;;;;;;;;AA4BAA,sCAAO,CAAC,WAAW,SAASC,SA+BjB,0BArBkBC,SAAUC,SAAUC,iBAGrCC,UAFAC,YAAcL,EAAE,QAAUC,SAAW,MACrCK,cAAgBN,EAAE,QAAUE,SAAW,MAG3CG,YAAYE,GAAG,SAAS,cAChBC,OAAOC,cAAgBD,OAAOE,QAAQP,aAAc,KAChDQ,WAAaN,YAAYO,KAAK,qBAClCR,UAAYE,cAAcO,IAAI,GAAGC,qBAChBV,UAAUW,YAEvBX,UAAUY,OACVV,cAAcW,IAAIN,YAClBP,UAAUc,WAEVZ,cAAcW,IAAIN"}